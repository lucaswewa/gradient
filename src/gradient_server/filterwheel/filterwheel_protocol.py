from typing import Protocol, Dict
from enum import Enum
from pydantic import BaseModel


class FilterwheelState(str, Enum):
    OPENED = "opened"
    CLOSED = "closed"
    MOVING = "moving"


class FilterwheelProperties(BaseModel): ...


class FilterwheelProtocol(Protocol):
    def open(self): ...

    def close(self): ...

    def get_position_mapping(self) -> Dict[int, str]: ...

    def set_position_mapping(self, mapping: Dict[int, str]): ...

    def get_properties(self) -> FilterwheelProperties: ...

    def get_state(self) -> FilterwheelState: ...

    def get_position(self) -> int: ...

    def get_position_by_name(self) -> str: ...

    def set_position(self, pos: int): ...

    def set_position_by_name(self, position_name: str): ...
