from typing import Protocol, Dict
from enum import Enum
from pydantic import BaseModel


class RxCompensationState(str, Enum):
    OPENED = "opened"
    CLOSED = "closed"
    MOVING = "moving"


class RxCompensationProperties(BaseModel): ...


class RxCompensationProtocol(Protocol):
    def open(self): ...

    def close(self): ...

    def get_state(self): ...

    def get_properties(self): ...

    def get_spherical_rx(self) -> float: ...

    def move_spherical_rx(self, diopter: float): ...

    def get_cylindrical_rx_power(self) -> str: ...

    def get_cylindrical_rx_axis(self) -> float: ...

    def move_cylindrical_rx_power(self, diopter: float): ...

    def move_cylindrical_rx_axis(self, angle: float): ...
